set nocompatible

" Load vim-plug
if empty(glob("~/.vim/autoload/plug.vim"))
  execute '!curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
endif

call plug#begin('~/.vim/plugged')
Plug 'gmarik/Vundle.vim'
Plug 'derekwyatt/vim-scala'
Plug 'altercation/vim-colors-solarized'
Plug 'tpope/vim-rails'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tomtom/tcomment_vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'christoomey/vim-tmux-navigator'
Plug 'mattn/gist-vim'
Plug 'mattn/webapi-vim'
Plug 'thoughtbot/vim-rspec'
Plug 'rking/ag.vim'
Plug 'Raimondi/delimitMate'
Plug 'ervandew/supertab'
Plug 'rust-lang/rust.vim'
Plug 'mattn/emmet-vim'
Plug 'othree/yajs.vim'
call plug#end()

filetype plugin indent on

" General
set nocompatible
set noswapfile
set nobackup
set encoding=utf-8
set listchars=tab:▸\ ,eol:¬
set anti
set hlsearch
set incsearch
set nowrap
set number
set list
set tabstop=2
set softtabstop=2
set shiftwidth=2
set expandtab
set splitbelow
set splitright
set showcmd
set wildignore+=*/vendor/**
set wildignore+=*/bin/**
set wildignore+=*~,*/log/*.log,*/tmp/*,*/coverage/*.html,*/.sass-cache/*,public/system/*,public/uploads/*,*/_site/*,*/build/*,*.jpg,*.jpeg,*.gif,*.png,*.pdf,*.mp3

" Solarized
syntax enable
set background=dark
silent! colorscheme solarized

" Key mappings
let mapleader = ","
nmap <C-h> <C-W>h
nmap <C-j> <C-W>j
nmap <C-k> <C-W>k
nmap <C-l> <C-W>l
nmap - :Explore<CR>
map ,, <C-^>
nmap :Vex :Vex!

" Trim trailing whitespace
function! <SID>StripTrailingWhitespaces()
    let _s=@/
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    let @/=_s
    call cursor(l, c)
endfunction
autocmd BufWritePre *.rb,*.js,*.m,*.h,*.scala :call <SID>StripTrailingWhitespaces()

" Gist
let g:gist_clip_command = 'pbcopy'
let g:gist_detect_filetype = 1
let g:gist_open_browser_after_post = 1
let g:gist_post_private = 1

" Rspec
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>
let g:rspec_command = "!bin/rspec {spec}"

" Ag
map <C-f> :Ag 
map <Leader>f :Ag <cword><CR>

" Custom statusline
set statusline=\ %t\ %=%l:%c\ %y\ %m
set laststatus=2

" Enable mouse mode for resizing panes
set mouse=a

autocmd QuickFixCmdPost *grep* cwindow
